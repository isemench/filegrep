
void list_del_init(struct list_head *entry)

    deletes entry from list and reinitialize it.

Parameters

struct list_head *entry

    the element to delete from the list.

void list_move(struct list_head *list, struct list_head *head)

    delete from one list and add as anotherâ€™s head

Parameters

struct list_head *list

    the entry to move
struct list_head *head

    the head that will precede our entry

void list_move_tail(struct list_head *list, struct list_head *head)

    delete from one list and add as anotherâ€™s tail

Parameters

struct list_head *list

    the entry to move
struct list_head *head

    the head that will follow our entry

void list_bulk_move_tail(struct list_head *head, struct list_head *first, struct list_head *last)

    move a subsection of a list to its tail

Parameters

struct list_head *head

    the head that will follow our entry
struct list_head *first

    first entry to move
struct list_head *last

    last entry to move, can be the same as first

Description

Move all entries between first and including last before head. All three entries must belong to the same linked list.

int list_is_first(const struct list_head *list, const struct list_head *head)

        tests whether list is the first entry in list head

Parameters

const struct list_head *list

    the entry to test
const struct list_head *head

    the head of the list

int list_is_last(const struct list_head *list, const struct list_head *head)

    tests whether list is the last entry in list head

Parameters

const struct list_head *list

    the entry to test
const struct list_head *head

    the head of the list

int list_is_head(const struct list_head *list, const struct list_head *head)

    tests whether list is the list head

Parameters

const struct list_head *list

    the entry to test
const struct list_head *head

    the head of the list

int list_empty(const struct list_head *head)

    tests whether a list is empty

Parameters

const struct list_head *head

    the list to test.


